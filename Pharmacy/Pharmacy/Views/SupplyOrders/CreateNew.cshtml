
@model Pharmacy.Models.Entities.SupplyOrder

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>SupplyOrder</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="PharmacyId" class="control-label"></label>
                <select asp-for="PharmacyId" class="form-control" asp-items="ViewBag.PharmacyId"></select>
            </div>
            <div class="form-group">
                <label asp-for="DeleveryDate" class="control-label"></label>
                <input asp-for="DeleveryDate" class="form-control" />
                <span asp-validation-for="DeleveryDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>

            @for (int i = 0; i < ((List<Pharmacy.Models.Entities.Drug>)@ViewData["DrugList"]).Count; i++)
            {
            <div class="form-group">
                @(((List<Pharmacy.Models.Entities.Drug> )@ViewData["DrugList"])[i].Name)
                <input style="margin-left:40px" type="number" class="btn btn-primary" />
            </div>
            }

            <div>
                <a class="nav-link text-dark" asp-controller="SupplyItems" asp-action="Create">Add Drug</a>
            </div>

        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}