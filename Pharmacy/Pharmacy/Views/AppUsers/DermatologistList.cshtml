@model IEnumerable<Pharmacy.Models.Entities.Users.AppUser>

@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@using Microsoft.AspNetCore.Identity
@using Pharmacy.Models.Entities.Users
@inject SignInManager<Pharmacy.Models.Entities.Users.AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@{
    ViewData["Title"] = "Dermatologist";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-controller="AppUsers" asp-action="PharmacistList" class="form-inline">
    <p>
        Search: <input type="text" name="searchString" class="form-control" />

        <select name="filter" id="filter" class="form-control">
            <option value="FirstName" class="option">FirstName</option>
            <option value="AvrageScore" class="option">Rating</option>
            <option value="City" class="option">City</option>
            <option value="Country" class="option">Country</option>
        </select>
        <input type="submit" value="Filter" class="btn btn-primary" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Adress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                Role
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AvrageScore)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Adress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @ViewData["roleName"]
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AvrageScore)
            </td>
            @if ((await AuthorizationService.AuthorizeAsync(User, null, "AdminPolicy")).Succeeded)
            {
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            }
        </tr>
        }
    </tbody>
</table>
