@model Pharmacy.Models.Entities.Users.AppUser

@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@using Microsoft.AspNetCore.Identity
@using Pharmacy.Models.Entities.Users
@inject SignInManager<Pharmacy.Models.Entities.Users.AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>
<hr />
<div>
    <h4>@ViewData["roleName"]</h4>

    <dl class="row">
        <b>
            <td class="col-sm-2">
                Name: @Html.DisplayFor(model => model.FirstName)
            </td><br />
            <td class="col-sm-2">
                Surname: @Html.DisplayFor(model => model.LastName)
            </td><br />
            <td class="col-sm-2">
                Email: @Html.DisplayFor(model => model.Email)
            </td><br />
            <td class="col-sm-2">
                Profession: @ViewData["roleName"]
            </td><br />

            @if (ViewData["roleName"].Equals("Dermatologist") || ViewData["roleName"].Equals("Pharmacist"))
            {
                <td class="col-sm-2">
                    <a asp-controller="Pharmacies" asp-action="Details" asp-route-id="@ViewData["pharmacyId"]">
                        Working place
                    </a>
                </td>
                <td class="col-sm-2">
                    Work time start: @Html.DisplayFor(model => model.WorkHoursStart)
                </td>
                <td class="col-sm-2">
                    Work time end: @Html.DisplayFor(model => model.WorkHoursEnd)
                </td>
            }
            @if (ViewData["roleName"].Equals("Patient"))
            {
                <td class="col-sm-2">
                    Allergies: 
                </td>
            }
        </b>
</div>
<div>
    @if ((await AuthorizationService.AuthorizeAsync(User, null, "PharmacyAdminPolicy")).Succeeded)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }
    | <a asp-action="Index">Back to List</a>
</div>

<script>
// Get the modal
var modal = document.getElementById("myModal");

// Get the button that opens the modal
var btn = document.getElementById("myBtn");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal
btn.onclick = function() {
  modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
  modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
  if (event.target == modal) {
    modal.style.display = "none";
  }
}
</script>