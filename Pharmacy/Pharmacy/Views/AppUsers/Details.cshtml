@model Pharmacy.Models.Entities.Users.AppUser

@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@using Microsoft.AspNetCore.Identity
@using Pharmacy.Models.Entities.Users
@inject SignInManager<Pharmacy.Models.Entities.Users.AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>
<hr />
<div>
    <h4>@ViewData["userRole"]</h4>

    <dl class="row">
        <b>
            <td class="col-sm-2">
                Name: @Html.DisplayFor(model => model.FirstName)
            </td><br />
            <td class="col-sm-2">
                Surname: @Html.DisplayFor(model => model.LastName)
            </td><br />
            <td class="col-sm-2">
                Profession: @ViewData["roleName"]
            </td><br />

            @if (ViewData["userRole"] == "Dermatologist" || ViewData["userRole"] == "Pharmacist")
            {
                <td class="col-sm-2">
                    <a asp-controller="Pharmacies" asp-action="Details" asp-route-id="@ViewData["pharmacyId"]">
                        Working place
                    </a>
                </td>
            }
        </b>
</div>
<div>
    @if ((await AuthorizationService.AuthorizeAsync(User, null, "PharmacyAdminPolicy")).Succeeded)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }
    | <a asp-action="Index">Back to List</a>
</div>